name: CI
on: [push, pull_request]
jobs:
  test:
    runs-on: ubuntu-latest
    env:
      RAILS_ENV: test
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    strategy:
      fail-fast: false
      matrix:
        database: [sqlite, postgres]
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: ${{ env.POSTGRES_USER }}
          POSTGRES_PASSWORD: ${{ env.POSTGRES_PASSWORD }}
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    steps:
      - uses: browser-actions/setup-chrome@latest
        with:
          chrome-version: stable
      - run: chrome --version
      - uses: actions/checkout@v4
      - uses: cachix/install-nix-action@v26
      - uses: cachix/cachix-action@v14
        with:
          name: bridgetroll
          extraPullNames: devenv
          authToken: "${{ secrets.CACHIX_AUTH_TOKEN }}"
      - name: Install devenv.sh
        run: nix profile install nixpkgs#devenv
      # devenv cache includes bundle
      - name: Cache .devenv directory
        uses: actions/cache@v4
        id: devenv-cache
        with:
          path: .devenv
          key: ${{ runner.os }}-devenv-${{ hashFiles('devenv.nix', 'devenv.lock', 'devenv.yaml', 'Gemfile.lock', 'yarn.lock', 'ruby-version', 'ruby-version', 'ruby-version', 'ruby-version', 'ruby-version', 'ruby-version', 'ruby-version', 'ruby-version') }}
          restore-keys: |
            ${{ runner.os }}-devenv-
      - name: Cache node_modules directory
        uses: actions/cache@v4
        id: node_modules-cache
        with:
          path: node_modules
          key: ${{ runner.os }}-node_modules-${{ hashFiles('yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node_modules-
      # -i (impure) is necessary to pass CI env var into devenv shell
      # I'm not sure why bundle install / yarn install are necessary, devenv shell should do this
      - run: devenv shell -i bundle install
      - run: devenv shell -i yarn install
      - run: devenv shell -i bin/rails db:setup
      - run: devenv shell -i bin/rake parallel:setup
      - run: devenv shell -i bin/rake
      - name: Archive capybara failure screenshots
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: capybara-${{ matrix.database }}
          path: tmp/capybara/*
          if-no-files-found: ignore
