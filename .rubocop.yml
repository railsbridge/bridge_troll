# .rubocop-todo.yml is a list of pre-existing style violations we can work on
# fixing later. Generated by `rubocop --auto-gen-config`.
inherit_from: .rubocop_todo.yml

AllCops:
  Include:
    - '**/Rakefile'
    - '**/config.ru'
  Exclude:
    - Guardfile
    - 'db/**/*'
    - 'config/**/*'
    - 'vendor/**/*'
    - 'script/**/*'
    # - !ruby/regexp /old_and_unused\.rb$/
  RunRailsCops: true

# Don't require documentation at the top of each class, so we don't flag things
# like models & controllers that don't need them.
Documentation:
  Enabled: false

Lint/UnusedBlockArgument:
  Enabled: false

Metrics/CyclomaticComplexity:
  Max: 15 # Default is 7

Metrics/PerceivedComplexity:
  Max: 15 # Default is 7

# Check to prefer `has_many :through` over `has_and_belongs_to_many`
Rails/HasAndBelongsToMany:
  Enabled: false

# Be fussy about multi-line parameter alignment
Style/AlignParameters:
  Enabled: false

# Whether `and` and `or` are banned only in conditionals (conditionals)
# or completely (always).
Style/AndOr:
  EnforcedStyle: conditionals

# Allow people to write comments en español or to André Akro or whatever.
Style/AsciiComments:
  Enabled: false

# Force people to, e.g., use `collect` instead of `find_all`
Style/CollectionMethods:
  Enabled: false

# Make sure multiline method chains don't end the line with '.'
Style/DotPosition:
  Enabled: false

# Honk if someone tries to, for example, make a boolean with `!!value`
Style/DoubleNegation:
  Enabled: false

# Be fussy about whitespace at the tops and bottoms of classes, etc.
Style/EmptyLinesAroundBody:
  Enabled: false

Style/HashSyntax:
  Enabled: false
# TODO: turn this on with a supported style
#   EnforcedStyle:
#     - ruby19
#     - hash_rockets

Style/IndentHash:
  Enabled: false

# Be fussy about whether the '#' of a comment has a space after
Style/LeadingCommentSpace:
  Enabled: false

# Require parens around params in a method definition like `def foo(bar, baz)`
Style/MethodDefParentheses:
  Enabled: false

# Require underscores in long numeric literals like 1_000_000.
Style/NumericLiterals:
  Enabled: false

Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    '%':  '{}'
    '%i': '{}'
    '%q': '{}'
    '%Q': '{}'
    '%r': '{}'
    '%s': '{}'
    '%w': '{}'
    '%W': '{}'
    '%x': '{}'

# Honk about using `Proc.new` instead of `proc`
Style/Proc:
  Enabled: false

# Get upset about optional braces like `get :index, { start: 4 }`
Style/BracesAroundHashParameters:
  Enabled: false

Style/Semicolon:
  # Allow ; to separate several expressions on the same line.
  AllowAsExpressionSeparator: true

Style/SpaceInsideBlockBraces:
  # Valid values are: space, no_space
  EnforcedStyle: space
  EnforcedStyleForEmptyBraces: space

  # Space between { and |. Overrides EnforcedStyle if there is a conflict.
  SpaceBeforeBlockParameters: true

# Complain about method calls like `event.add( participant)`
Style/SpaceInsideParens:
  Enabled: false

# Require '' or "" as default string delimiters.
Style/StringLiterals:
  Enabled: false

Style/TrailingComma:
  Enabled: false
